<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>ADITYA PRIVATE SERVER</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"/>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@700&family=Poppins:wght@400;600;700;800&display=swap');
    
    :root {
      --neon-blue: #00f7ff;
      --neon-purple: #9d00ff;
      --neon-pink: #ff00aa;
      --dark-bg: #0a0a0a;
      --card-bg: rgba(20, 20, 30, 0.95);
      --glass-bg: rgba(255, 255, 255, 0.05);
      --text-primary: #ffffff;
      --text-secondary: #b0b0b0;
    }
    
    body {
      margin: 0;
      background: var(--dark-bg);
      font-family: 'Poppins', sans-serif;
      color: var(--text-primary);
      overflow-x: hidden;
      background-image: 
        radial-gradient(circle at 10% 20%, rgba(0, 247, 255, 0.03) 0%, transparent 30%),
        radial-gradient(circle at 90% 80%, rgba(157, 0, 255, 0.03) 0%, transparent 30%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
    }

    .container {
      max-width: 900px;
      width: 100%;
      margin: 40px auto;
      padding: 30px;
      border-radius: 20px;
      background: var(--card-bg);
      box-shadow: 
        0 0 30px rgba(0, 247, 255, 0.1),
        0 0 60px rgba(157, 0, 255, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(15px);
      position: relative;
      overflow: hidden;
      z-index: 1;
    }

    .container::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(0, 247, 255, 0.05) 0%, transparent 70%);
      animation: rotate 60s linear infinite;
      z-index: -1;
    }

    @keyframes rotate {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    h1 {
      color: var(--neon-blue);
      text-shadow: 0 0 15px var(--neon-blue);
      font-family: 'Orbitron', sans-serif;
      font-weight: 800;
      letter-spacing: 3px;
      margin: 0 0 20px 0;
      font-size: 2.5rem;
      position: relative;
      display: inline-block;
      background: linear-gradient(90deg, var(--neon-blue), var(--neon-purple));
      -webkit-background-clip: text;
      background-clip: text;
      -webkit-text-fill-color: transparent;
    }

    h3 {
      margin: 15px 0;
      color: var(--text-primary);
      font-weight: 600;
      font-size: 1.1rem;
      letter-spacing: 1px;
    }

    .info-display {
      display: flex;
      justify-content: space-between;
      background: var(--glass-bg);
      border-radius: 12px;
      padding: 15px;
      margin: 20px 0;
      border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .info-box {
      text-align: center;
      flex: 1;
      padding: 10px;
    }

    .info-label {
      color: var(--text-secondary);
      font-size: 0.9rem;
      margin-bottom: 5px;
    }

    .info-value {
      font-weight: 700;
      font-size: 1.3rem;
      color: var(--neon-blue);
    }

    .timer-value {
      color: var(--neon-pink);
      animation: pulse 1s infinite alternate;
    }

    @keyframes pulse {
      from { opacity: 0.7; }
      to { opacity: 1; }
    }

    .button-group {
      display: flex;
      gap: 15px;
      justify-content: center;
      margin: 30px 0;
      flex-wrap: wrap;
    }

    button {
      padding: 14px 30px;
      font-size: 16px;
      cursor: pointer;
      background: linear-gradient(135deg, var(--neon-blue), var(--neon-purple));
      color: #000;
      border: none;
      border-radius: 50px;
      font-weight: 700;
      letter-spacing: 1px;
      transition: all 0.3s ease;
      box-shadow: 0 5px 15px rgba(0, 247, 255, 0.3);
      position: relative;
      overflow: hidden;
      display: flex;
      align-items: center;
      gap: 8px;
      min-width: 220px;
      justify-content: center;
    }

    button:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 25px rgba(0, 247, 255, 0.5);
    }

    button:active {
      transform: translateY(1px);
    }

    button.secondary {
      background: var(--glass-bg);
      color: var(--text-primary);
      border: 1px solid rgba(255, 255, 255, 0.2);
      box-shadow: none;
    }

    button.secondary:hover {
      background: rgba(255, 255, 255, 0.1);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }

    table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
      margin-top: 30px;
      border-radius: 12px;
      overflow: hidden;
      background: var(--glass-bg);
      backdrop-filter: blur(5px);
    }

    th, td {
      padding: 15px;
      text-align: center;
      font-weight: 600;
      border-bottom: 1px solid rgba(255, 255, 255, 0.05);
    }

    th {
      background: linear-gradient(135deg, rgba(0, 247, 255, 0.1), rgba(157, 0, 255, 0.1));
      color: var(--neon-blue);
      font-weight: 700;
      letter-spacing: 1px;
      text-transform: uppercase;
      font-size: 0.8rem;
    }

    tr:hover {
      background: rgba(255, 255, 255, 0.03);
    }

    .telegram-btn {
      position: absolute;
      top: 20px;
      right: 20px;
      display: flex;
      align-items: center;
      gap: 8px;
      text-decoration: none;
      background: linear-gradient(135deg, #0088cc, #00aced);
      padding: 10px 20px;
      border-radius: 50px;
      box-shadow: 0 5px 15px rgba(0, 136, 204, 0.4);
      color: white;
      font-weight: 700;
      letter-spacing: 0.5px;
      transition: all 0.3s ease;
      z-index: 10;
      font-size: 0.9rem;
    }

    .telegram-btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 25px rgba(0, 136, 204, 0.6);
    }

    .telegram-btn i {
      font-size: 1.2rem;
    }

    .badge {
      display: inline-block;
      padding: 3px 8px;
      border-radius: 4px;
      font-size: 0.8rem;
      font-weight: 700;
      margin-left: 5px;
    }

    .badge-red {
      background: rgba(255, 0, 0, 0.2);
      color: #ff5555;
      border: 1px solid rgba(255, 0, 0, 0.3);
    }

    .badge-green {
      background: rgba(0, 255, 0, 0.2);
      color: #55ff55;
      border: 1px solid rgba(0, 255, 0, 0.3);
    }

    .badge-small {
      background: rgba(0, 247, 255, 0.2);
      color: var(--neon-blue);
      border: 1px solid rgba(0, 247, 255, 0.3);
    }

    .badge-big {
      background: rgba(157, 0, 255, 0.2);
      color: var(--neon-purple);
      border: 1px solid rgba(157, 0, 255, 0.3);
    }

    .floating-icons {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: -1;
      overflow: hidden;
    }

    .floating-icon {
      position: absolute;
      opacity: 0.1;
      animation: float linear infinite;
    }

    @keyframes float {
      0% {
        transform: translateY(0) translateX(0) rotate(0deg);
        opacity: 0;
      }
      10% {
        opacity: 0.1;
      }
      100% {
        transform: translateY(-100vh) translateX(100px) rotate(360deg);
        opacity: 0;
      }
    }

    .footer {
      margin-top: 30px;
      text-align: center;
      color: var(--text-secondary);
      font-size: 0.9rem;
    }

    .footer span {
      color: var(--neon-pink);
      font-weight: 600;
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
      .container {
        margin: 20px 0;
        padding: 20px;
      }
      
      h1 {
        font-size: 1.8rem;
        margin-top: 40px;
      }
      
      .telegram-btn {
        position: relative;
        top: auto;
        right: auto;
        margin: 0 auto 20px;
        display: inline-flex;
      }
      
      .info-display {
        flex-direction: column;
        gap: 10px;
      }
      
      button {
        min-width: 100%;
      }
    }
  </style>
</head>
<body>
  <!-- Floating background icons -->
  <div class="floating-icons" id="floatingIcons"></div>

  <div class="container animate__animated animate__fadeIn">
    <a href="https://t.me/+w0-s68DC00dhMmU9" target="_blank" class="telegram-btn animate__animated animate__pulse animate__infinite">
      <i class="fab fa-telegram"></i>
      @ADITYABHAI6900
    </a>

    <h1 class="animate__animated animate__fadeInDown">ADITYA PRIVATE MODS</h1>
    
    <div class="info-display">
      <div class="info-box">
        <div class="info-label">Current Period</div>
        <div class="info-value" id="periodDisplay">Loading...</div>
      </div>
      <div class="info-box">
        <div class="info-label">Time Remaining</div>
        <div class="info-value timer-value" id="timer">00:00</div>
      </div>
    </div>

    <div class="button-group">
      <button onclick="predict()" class="animate__animated animate__pulse">
        <i class="fas fa-magic"></i> Predict Now
      </button>
      <button onclick="copyLast()" class="secondary">
        <i class="fas fa-copy"></i> Copy Last Prediction
      </button>
    </div>

    <table>
      <thead>
        <tr>
          <th>Period</th>
          <th>Color</th>
          <th>Size</th>
          <th>Number</th>
        </tr>
      </thead>
      <tbody id="historyTable"></tbody>
    </table>
    
    <div class="footer">
      ‚ú® ùó†ùó¢ùóó ùó¢ùó™ùó°ùóòùó•: @ADITYABHAI6900 ‚ú® | <span>üíñ ADITYA LOVE SHANU üíñ</span>
    </div>
  </div>

  <script>
    // Create floating icons
    function createFloatingIcons() {
      const container = document.getElementById('floatingIcons');
      const icons = ['üî¥', 'üü¢', 'üîµ', '‚≠ê', 'üåÄ', 'üíé', '‚ú®'];
      const count = 15;
      
      for (let i = 0; i < count; i++) {
        const icon = document.createElement('div');
        icon.className = 'floating-icon';
        icon.textContent = icons[Math.floor(Math.random() * icons.length)];
        
        // Random position
        icon.style.left = `${Math.random() * 100}%`;
        icon.style.top = `${Math.random() * 100}%`;
        
        // Random size
        const size = Math.random() * 24 + 16;
        icon.style.fontSize = `${size}px`;
        
        // Random animation duration
        const duration = Math.random() * 30 + 20;
        icon.style.animationDuration = `${duration}s`;
        
        // Random delay
        icon.style.animationDelay = `${Math.random() * 10}s`;
        
        container.appendChild(icon);
      }
    }
    
    // Initialize floating icons
    createFloatingIcons();

    let lastPeriod = "";
    let predictions = [];

    function updatePeriodTimer() {
      const now = new Date();
      const seconds = now.getUTCSeconds();
      const remaining = 60 - seconds;

      const y = now.getUTCFullYear();
      const m = String(now.getUTCMonth() + 1).padStart(2, '0');
      const d = String(now.getUTCDate()).padStart(2, '0');
      const h = now.getUTCHours();
      const min = now.getUTCMinutes();

      const period = `${y}${m}${d}1000${10001 + (h * 60 + min)}`;

      document.getElementById("periodDisplay").innerText = period;
      
      // Format timer with leading zeros
      const formattedTime = String(remaining).padStart(2, '0');
      document.getElementById("timer").innerText = `00:${formattedTime}`;
      
      // Add pulse animation when timer is below 10 seconds
      const timerElement = document.getElementById("timer");
      if (remaining <= 10) {
        timerElement.style.animation = 'pulse 0.5s infinite alternate';
      } else {
        timerElement.style.animation = '';
      }
    }

    setInterval(updatePeriodTimer, 1000);
    updatePeriodTimer();

    function sumOfDigits(str) {
      return str.split('').reduce((sum, ch) => sum + parseInt(ch), 0);
    }

    function getRandom(arr) {
      return arr[Math.floor(Math.random() * arr.length)];
    }

    function predict() {
      const period = document.getElementById("periodDisplay").innerText;
      if (period === lastPeriod || period === "Loading...") {
        alert("Please wait for the next period...");
        return;
      }
      lastPeriod = period;

      const sum = sumOfDigits(period);
      const mod = sum % 3;

      let color = "", size = "", number = "", colorClass = "", sizeClass = "";
      const red = [1, 3, 5, 7, 9];
      const green = [0, 2, 4, 6, 8];

      if (mod === 0) {
        color = "RED"; colorClass = "badge-red"; 
        size = "SMALL"; sizeClass = "badge-small"; 
        number = getRandom(red);
      } else if (mod === 1) {
        color = "GREEN"; colorClass = "badge-green"; 
        size = "BIG"; sizeClass = "badge-big"; 
        number = getRandom(green);
      } else {
        color = "RED"; colorClass = "badge-red"; 
        size = "BIG"; sizeClass = "badge-big"; 
        number = getRandom(red);
      }

      const row = `
        <tr class="animate__animated animate__fadeIn">
          <td>${period}</td>
          <td><span class="badge ${colorClass}">${color}</span></td>
          <td><span class="badge ${sizeClass}">${size}</span></td>
          <td><strong>${number}</strong></td>
        </tr>
      `;
      
      // Add to beginning of table
      const tableBody = document.getElementById("historyTable");
      tableBody.insertAdjacentHTML('afterbegin', row);
      
      // Limit to 10 predictions
      if (tableBody.children.length > 10) {
        tableBody.removeChild(tableBody.lastChild);
      }

      // Save last data for copy
      window.lastPrediction = {
        period, color, size, number
      };
      
      // Add visual feedback
      const predictBtn = document.querySelector('button[onclick="predict()"]');
      predictBtn.classList.add('animate__rubberBand');
      setTimeout(() => {
        predictBtn.classList.remove('animate__rubberBand');
      }, 1000);
    }

    function copyLast() {
      if (!window.lastPrediction) {
        alert("Please make a prediction first.");
        return;
      }

      const { period, color, size, number } = window.lastPrediction;

      const textToCopy = `Period: ${period}\nColor: ${color}\nSize: ${size}\nNumber: ${number}\n‚ú® ùó†ùó¢ùóó ùó¢ùó™ùó°ùóòùó•: @ADITYABHAI6900 ‚ú®\nüíñ ADITYA LOVE SHANU üíñ`;

      navigator.clipboard.writeText(textToCopy).then(() => {
        // Visual feedback
        const copyBtn = document.querySelector('button[onclick="copyLast()"]');
        copyBtn.innerHTML = '<i class="fas fa-check"></i> Copied!';
        copyBtn.style.background = 'linear-gradient(135deg, var(--neon-pink), var(--neon-purple))';
        setTimeout(() => {
          copyBtn.innerHTML = '<i class="fas fa-copy"></i> Copy Last Prediction';
          copyBtn.style.background = 'var(--glass-bg)';
        }, 2000);
      }).catch(() => {
        alert("Copy failed! Please try again.");
      });
    }
  </script>
</body>
</html>